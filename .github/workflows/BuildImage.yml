name: Build Image

on:
  workflow_dispatch:
    inputs:
      version:
        default: 'false'
        description: 'Version to build'
        required: false

env:
  ENDPOINT: "rix1337/docker-quasarr"
  GHCR_ENDPOINT: "ghcr.io/rix1337/quasarr"

jobs:
  version-check:
    runs-on: ubuntu-latest
    outputs:
      output: ${{ steps.get-version.outputs.version }}
    steps:
      - id: get-version
        run: | 
          if [ -z "${{ github.event.inputs.version }}" ]; then VS="false"; else VS=${{ github.event.inputs.version }}; fi
          if [[ ${VS} == "false" ]]
          then
            echo "Grabbing latest quasarr version from pypi.org"
            VERSION=$(curl -Ls https://pypi.org/pypi/quasarr/json | jq -r .info.version)
          else
            echo "Using version from workflow_dispatch input"
            VERSION=${VS}
          fi
          echo "version=$VERSION" >>$GITHUB_OUTPUT

  build-amd64:
    runs-on: ubuntu-latest
    needs: version-check
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: "${{ secrets.DOCKERUSER }}"
          password: "${{ secrets.DOCKERPASS }}"
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: "${{ github.actor }}"
          password: "${{ secrets.GITHUB_TOKEN }}"
      - name: Build and Push AMD64 Image
        uses: docker/build-push-action@v6
        with:
          context: "./docker"
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.ENDPOINT }}:latest,${{ env.ENDPOINT }}:latest-amd64,${{ env.ENDPOINT }}:${{ needs.version-check.outputs.output }}-amd64
            ${{ env.GHCR_ENDPOINT }}:latest,${{ env.GHCR_ENDPOINT }}:latest-amd64,${{ env.GHCR_ENDPOINT }}:${{ needs.version-check.outputs.output }}-amd64
          build-args: VS=${{ needs.version-check.outputs.output }}

  build-arm64:
    runs-on: ubuntu-24.04-arm
    needs: version-check
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: "${{ secrets.DOCKERUSER }}"
          password: "${{ secrets.DOCKERPASS }}"
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: "${{ github.actor }}"
          password: "${{ secrets.GITHUB_TOKEN }}"
      - name: Build and Push ARM64 Image
        uses: docker/build-push-action@v6
        with:
          context: "./docker"
          platforms: linux/arm64
          push: true
          tags: |
            ${{ env.ENDPOINT }}:latest-arm64,${{ env.ENDPOINT }}:${{ needs.version-check.outputs.output }}-arm64
            ${{ env.GHCR_ENDPOINT }}:latest-arm64,${{ env.GHCR_ENDPOINT }}:${{ needs.version-check.outputs.output }}-arm64
          build-args: VS=${{ needs.version-check.outputs.output }}
